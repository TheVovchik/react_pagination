{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","className","classNames","disabled","href","onClick","map","page","active","length","items","options","App","useState","setPerPage","setCurrentPage","firstItemOnPage","lastItemOnPage","id","value","onChange","e","target","handleOptions","option","htmlFor","item","index","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAE9C,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EAAoB,OAAS,QAC5CS,QAAS,kBAAuB,IAAhBT,EACZC,EAAaD,EAAc,GAC3B,MAPN,oBAYDE,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASX,IAJvB,SAOE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAOE,IAASX,EACrBC,EAAaU,GACb,MANN,SAQGA,KAdEA,MAkBT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUP,IAAgBE,EAAMW,SAFpC,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAAMW,OAAS,OAAS,QACvDJ,QAAS,kBAAOT,IAAgBE,EAAMW,OAClCZ,EAAaD,EAAc,GAC3B,MAPN,wBCxDFc,EAAQvB,EAAW,EADX,IAEXmB,KAAI,SAAAf,GAAC,qBAAYA,MACdoB,EAAU,CAAC,EAAG,EAAG,GAAI,IAEdC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBmB,EAApB,KACMC,EAAkB,GAAKpB,EAAc,GAAKD,EAC1CsB,EAAiBrB,EAAcD,EATzB,MAWRC,EAAcD,EAOlB,OACE,sBAAKM,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCoB,EADjC,cACsDC,EADtD,eAtBQ,GAsBR,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OApBE,SAACA,GACrBP,GAAYO,EAAEC,OAAOH,OACrBJ,EAAe,GAkBUQ,CAAcF,IALjC,SAOGV,EAAQL,KAAI,SAACkB,GAAD,OACX,wBAAqBL,MAAOK,EAA5B,SAAqCA,GAAxBA,UAKnB,uBAAOC,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MA/CM,GAgDNC,QAASA,EACTC,YAAaA,EACbC,aAAckB,IAEhB,6BACGL,EAAMJ,KAAI,SAACoB,EAAMC,GAChB,OAAIA,IAAU/B,EAAc,GAAKD,GAC5BgC,EAAQ/B,EAAcD,EAEvB,oBAAe,UAAQ,OAAvB,SAA+B+B,GAAtBA,GAIN,cChEjBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1b83b188.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (pageNumber: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={() => (currentPage !== 1\n            ? onPageChange(currentPage - 1)\n            : null)}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => (page !== currentPage\n              ? onPageChange(page)\n              : null)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === pages.length },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages.length ? 'true' : 'false'}\n          onClick={() => (currentPage !== pages.length\n            ? onPageChange(currentPage + 1)\n            : null)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst total = 42;\nconst items = getNumbers(1, total)\n  .map(n => `Item ${n}`);\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItemOnPage = 1 + (currentPage - 1) * perPage;\n  const lastItemOnPage = currentPage * perPage > total\n    ? total\n    : currentPage * perPage;\n\n  const handleOptions = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => handleOptions(e)}\n          >\n            {options.map((option) => (\n              <option key={option} value={option}>{option}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {items.map((item, index) => {\n          if (index >= (currentPage - 1) * perPage\n            && index < currentPage * perPage) {\n            return (\n              <li key={item} data-cy=\"item\">{item}</li>\n            );\n          }\n\n          return null;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}